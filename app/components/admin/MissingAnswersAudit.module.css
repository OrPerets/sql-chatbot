.container {
  background: white;
  border-radius: 12px;
  padding: 1.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  border: 1px solid #e2e8f0;
}

.header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding-bottom: 1.5rem;
  border-bottom: 1px solid #f1f5f9;
  margin-bottom: 1.5rem;
}

.headerIcon {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 0.75rem;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.headerContent h3 {
  font-size: 1.1rem;
  font-weight: 600;
  color: #2d3748;
  margin: 0 0 0.25rem 0;
}

.headerContent p {
  font-size: 0.9rem;
  color: #64748b;
  margin: 0;
}

.content {
  min-height: 200px;
}

/* Initial State */
.initialState {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 2rem 0;
}

.stateIcon {
  color: #667eea;
  margin-bottom: 1rem;
  opacity: 0.8;
}

.stateContent h3 {
  font-size: 1.2rem;
  font-weight: 600;
  color: #2d3748;
  margin: 0 0 0.5rem 0;
}

.stateContent p {
  font-size: 0.9rem;
  color: #64748b;
  margin: 0 0 1.5rem 0;
  max-width: 400px;
  line-height: 1.5;
}

/* Buttons */
.primaryButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(102, 126, 234, 0.2);
}

.primaryButton:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(102, 126, 234, 0.3);
}

.primaryButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

.secondaryButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: #f8fafc;
  color: #4a5568;
  border: 1px solid #e2e8f0;
  padding: 0.75rem 1rem;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.secondaryButton:hover:not(:disabled) {
  background: #edf2f7;
  border-color: #cbd5e0;
}

.secondaryButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.dangerButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: linear-gradient(135deg, #e53e3e 0%, #c53030 100%);
  color: white;
  border: none;
  padding: 0.75rem 1rem;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(229, 62, 62, 0.2);
}

.dangerButton:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(229, 62, 62, 0.3);
}

.dangerButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

/* Scan Results */
.scanResults {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.summaryGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 1rem;
}

.summaryCard {
  background: #f8fafc;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  padding: 1rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.summaryCard.success {
  background: #f0fdf4;
  border-color: #bbf7d0;
}

.summaryCard.success .summaryIcon {
  color: #059669;
}

.summaryCard.warning {
  background: #fffbeb;
  border-color: #fed7aa;
}

.summaryCard.warning .summaryIcon {
  color: #d97706;
}

.summaryIcon {
  flex-shrink: 0;
  color: #64748b;
}

.summaryContent {
  text-align: right;
}

.summaryValue {
  font-size: 1.5rem;
  font-weight: 700;
  color: #1e293b;
  line-height: 1;
}

.summaryLabel {
  font-size: 0.8rem;
  color: #64748b;
  font-weight: 500;
  margin-top: 0.25rem;
}

.actionButtons {
  display: flex;
  gap: 1rem;
  align-items: center;
  flex-wrap: wrap;
}

/* Detailed Results */
.detailedResults {
  background: #f8fafc;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  padding: 1rem;
}

.resultsHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
  padding-bottom: 0.75rem;
  border-bottom: 1px solid #e2e8f0;
}

.resultsHeader h4 {
  font-size: 1rem;
  font-weight: 600;
  color: #2d3748;
  margin: 0;
}

.resultsBadge {
  background: #fef3c7;
  color: #92400e;
  padding: 0.25rem 0.75rem;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 500;
}

.questionsList {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  max-height: 300px;
  overflow-y: auto;
}

.questionItem {
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  padding: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
}

.questionInfo {
  flex: 1;
  text-align: right;
}

.questionId {
  font-size: 0.8rem;
  font-weight: 600;
  color: #667eea;
  margin-bottom: 0.25rem;
}

.questionText {
  font-size: 0.9rem;
  color: #2d3748;
  margin-bottom: 0.5rem;
  line-height: 1.4;
}

.questionMeta {
  display: flex;
  gap: 0.75rem;
  align-items: center;
}

.difficulty {
  font-size: 0.8rem;
  color: #64748b;
  background: #f1f5f9;
  padding: 0.2rem 0.5rem;
  border-radius: 4px;
}

.editButton {
  background: #667eea;
  color: white;
  border: none;
  padding: 0.5rem;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.editButton:hover {
  background: #5a67d8;
  transform: translateY(-1px);
}

/* Success State */
.successState {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 2rem 0;
}

.successIcon {
  color: #059669;
  margin-bottom: 1rem;
}

.successMessage {
  font-size: 1.1rem;
  font-weight: 600;
  color: #059669;
}

/* Responsive Design */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }
  
  .header {
    flex-direction: column;
    text-align: center;
    gap: 1rem;
  }
  
  .summaryGrid {
    grid-template-columns: 1fr;
  }
  
  .actionButtons {
    flex-direction: column;
    align-items: stretch;
  }
  
  .actionButtons button {
    width: 100%;
    justify-content: center;
  }
  
  .resultsHeader {
    flex-direction: column;
    align-items: stretch;
    gap: 0.5rem;
    text-align: center;
  }
  
  .questionItem {
    flex-direction: column;
    align-items: stretch;
    text-align: center;
  }
  
  .questionInfo {
    text-align: center;
  }
  
  .questionMeta {
    justify-content: center;
  }
}
