.container {
  position: relative;
  width: 100%;
  margin-bottom: var(--space-4);
  direction: rtl;
}

/* ==== INPUT WRAPPER ==== */
.inputWrapper {
  position: relative;
  width: 100%;
}

.inputContainer {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}

/* ==== FLOATING LABEL ==== */
.label {
  position: absolute;
  right: var(--space-3);
  top: 50%;
  transform: translateY(-50%);
  font-size: var(--text-base);
  font-weight: var(--font-medium);
  color: var(--color-neutral-500);
  pointer-events: none;
  transition: all var(--transition-base);
  background: var(--input-background);
  padding: 0 var(--space-1);
  z-index: 2;
  white-space: nowrap;
  user-select: none;
}

.labelFloating {
  top: 0;
  right: var(--space-2);
  transform: translateY(-50%);
  font-size: var(--text-sm);
  font-weight: var(--font-semibold);
}

.labelFocused {
  color: var(--input-border-focus);
}

.labelError {
  color: var(--color-error-600);
}

.labelSuccess {
  color: var(--color-success-600);
}

.required {
  color: var(--color-error-500);
  margin-right: var(--space-1);
}

/* ==== INPUT FIELD ==== */
.input {
  width: 100%;
  background: var(--input-background);
  border: 1px solid var(--input-border);
  border-radius: var(--input-radius);
  color: var(--color-neutral-900);
  font-size: var(--text-base);
  font-weight: var(--font-normal);
  font-family: var(--font-primary);
  transition: all var(--transition-base);
  outline: none;
  direction: rtl;
  text-align: right;
}

.input:focus {
  border-color: var(--input-border-focus);
  box-shadow: var(--focus-ring);
}

.input::placeholder {
  color: var(--color-neutral-400);
  font-weight: var(--font-normal);
}

.inputWithAddons {
  padding-left: var(--space-12);
}

/* ==== INPUT SIZES ==== */
.inputSm {
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-sm);
  min-height: 36px;
}

.inputMd {
  padding: var(--space-3) var(--space-4);
  font-size: var(--text-base);
  min-height: 44px;
}

.inputLg {
  padding: var(--space-4) var(--space-5);
  font-size: var(--text-lg);
  min-height: 52px;
}

/* ==== INPUT VARIANTS ==== */
.inputOutlined {
  /* Default variant - already defined above */
}

.inputFilled {
  background: var(--color-neutral-100);
  border: 1px solid transparent;
}

.inputFilled:focus {
  background: var(--input-background);
  border-color: var(--input-border-focus);
}

.inputUnderlined {
  background: transparent;
  border: none;
  border-bottom: 2px solid var(--input-border);
  border-radius: 0;
  padding-left: 0;
  padding-right: 0;
}

.inputUnderlined:focus {
  border-bottom-color: var(--input-border-focus);
  box-shadow: none;
}

/* ==== INPUT STATES ==== */
.inputFocused {
  border-color: var(--input-border-focus);
  box-shadow: var(--focus-ring);
}

.inputError {
  border-color: var(--color-error-500);
  background: var(--color-error-50);
}

.inputError:focus {
  border-color: var(--color-error-600);
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

.inputSuccess {
  border-color: var(--color-success-500);
  background: var(--color-success-50);
}

.inputSuccess:focus {
  border-color: var(--color-success-600);
  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
}

.inputDisabled {
  background: var(--input-background-disabled);
  color: var(--color-neutral-400);
  cursor: not-allowed;
  pointer-events: none;
  opacity: 0.6;
}

.inputLoading {
  pointer-events: none;
}

/* ==== CONTAINER STATES ==== */
.containerFocused {
  /* Add any container-specific focus styles if needed */
}

.containerError .label {
  color: var(--color-error-600);
}

.containerSuccess .label {
  color: var(--color-success-600);
}

.containerDisabled {
  opacity: 0.6;
  pointer-events: none;
}

/* ==== PREFIX & SUFFIX ==== */
.prefix,
.suffix {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  gap: var(--space-1);
  z-index: 3;
}

.prefix {
  right: var(--space-3);
  color: var(--color-neutral-500);
}

.suffix {
  left: var(--space-3);
  color: var(--color-neutral-500);
}

.customSuffix {
  color: var(--color-neutral-600);
}

/* ==== ACTION BUTTONS ==== */
.clearButton,
.passwordToggle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  background: none;
  border: none;
  border-radius: var(--radius-base);
  color: var(--color-neutral-500);
  cursor: pointer;
  transition: all var(--transition-base);
  padding: 0;
}

.clearButton:hover,
.passwordToggle:hover {
  background: var(--color-neutral-200);
  color: var(--color-neutral-700);
}

.clearButton:focus,
.passwordToggle:focus {
  outline: none;
  box-shadow: var(--focus-ring);
}

/* ==== STATUS ICONS ==== */
.statusIcon {
  display: flex;
  align-items: center;
  color: inherit;
}

.inputError ~ .suffix .statusIcon {
  color: var(--color-error-500);
}

.inputSuccess ~ .suffix .statusIcon {
  color: var(--color-success-500);
}

/* ==== LOADING SPINNER ==== */
.loadingSpinner {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 16px;
  height: 16px;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid var(--color-neutral-200);
  border-top: 2px solid var(--brand-primary);
  border-radius: var(--radius-full);
  animation: spin 1s linear infinite;
}

/* ==== CHARACTER COUNT ==== */
.characterCount {
  position: absolute;
  left: var(--space-2);
  bottom: var(--space-2);
  font-size: var(--text-xs);
  color: var(--color-neutral-500);
  font-weight: var(--font-medium);
  background: var(--input-background);
  padding: 0 var(--space-1);
  border-radius: var(--radius-sm);
  z-index: 2;
}

.characterCountWarning {
  color: var(--color-warning-600);
  font-weight: var(--font-semibold);
}

/* ==== HELPER TEXT ==== */
.helperText {
  display: flex;
  align-items: center;
  gap: var(--space-1);
  margin-top: var(--space-2);
  font-size: var(--text-sm);
  color: var(--color-neutral-600);
  line-height: var(--leading-normal);
}

.helperTextError {
  color: var(--color-error-600);
}

.helperIcon {
  flex-shrink: 0;
}

/* ==== VARIANT-SPECIFIC ADJUSTMENTS ==== */

/* Filled variant label adjustments */
.containerFilled .label {
  background: var(--color-neutral-100);
}

.containerFilled .inputFocused ~ .label,
.containerFilled .labelFloating {
  background: var(--input-background);
}

/* Underlined variant adjustments */
.containerUnderlined .label {
  background: transparent;
  padding: 0;
}

.containerUnderlined .characterCount {
  background: transparent;
  bottom: -var(--space-6);
}

/* ==== RESPONSIVE DESIGN ==== */
@media (max-width: 768px) {
  .inputSm {
    min-height: 40px;
    font-size: 16px; /* Prevent iOS zoom */
  }

  .inputMd {
    min-height: 44px;
    font-size: 16px; /* Prevent iOS zoom */
  }

  .inputLg {
    min-height: 48px;
    font-size: 16px; /* Prevent iOS zoom */
  }

  .label {
    font-size: var(--text-sm);
  }

  .labelFloating {
    font-size: var(--text-xs);
  }
}

@media (max-width: 480px) {
  .container {
    margin-bottom: var(--space-3);
  }

  .inputSm {
    padding: var(--space-2);
  }

  .inputMd {
    padding: var(--space-3);
  }

  .inputLg {
    padding: var(--space-3);
  }

  .suffix,
  .prefix {
    left: var(--space-2);
    right: var(--space-2);
  }

  .inputWithAddons {
    padding-left: var(--space-10);
  }
}

/* ==== HIGH CONTRAST MODE ==== */
@media (prefers-contrast: high) {
  .input {
    border-width: 2px;
  }

  .inputError {
    border-width: 2px;
  }

  .inputSuccess {
    border-width: 2px;
  }

  .clearButton,
  .passwordToggle {
    border: 1px solid var(--color-neutral-400);
  }
}

/* ==== REDUCED MOTION ==== */
@media (prefers-reduced-motion: reduce) {
  .input,
  .label,
  .clearButton,
  .passwordToggle {
    transition: none;
  }

  .spinner {
    animation: none;
    border-top-color: var(--brand-primary);
  }
}

/* ==== DARK MODE PREPARATION ==== */
@media (prefers-color-scheme: dark) {
  .input {
    background: var(--color-neutral-800);
    border-color: var(--color-neutral-600);
    color: var(--color-neutral-100);
  }

  .input:focus {
    border-color: var(--brand-primary);
    background: var(--color-neutral-700);
  }

  .label {
    color: var(--color-neutral-400);
    background: var(--color-neutral-800);
  }

  .labelFocused {
    color: var(--brand-primary);
  }

  .inputFilled {
    background: var(--color-neutral-700);
  }

  .inputFilled:focus {
    background: var(--color-neutral-600);
  }

  .helperText {
    color: var(--color-neutral-300);
  }

  .characterCount {
    color: var(--color-neutral-400);
    background: var(--color-neutral-800);
  }

  .clearButton:hover,
  .passwordToggle:hover {
    background: var(--color-neutral-600);
    color: var(--color-neutral-200);
  }
}

/* ==== ANIMATIONS ==== */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* ==== FOCUS VISIBLE SUPPORT ==== */
.clearButton:focus-visible,
.passwordToggle:focus-visible {
  outline: none;
  box-shadow: var(--focus-ring);
}

/* ==== SELECTION STYLES ==== */
.input::selection {
  background: rgba(102, 126, 234, 0.2);
  color: var(--color-neutral-900);
}

/* ==== AUTOFILL STYLES ==== */
.input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 30px var(--input-background) inset;
  -webkit-text-fill-color: var(--color-neutral-900);
  transition: background-color 5000s ease-in-out 0s;
}

.input:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 30px var(--input-background) inset;
  -webkit-text-fill-color: var(--color-neutral-900);
}
